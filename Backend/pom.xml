<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>ru.ifmo.software_engineering</groupId>
	<artifactId>afterlife</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>afterlife</name>
	<description>Backend project for afterlife2.0</description>
	<properties>
		<java.version>11</java.version>
		<kotlin.version>1.5.20</kotlin.version>
		<spring.version>2.5.2</spring.version>
		<jooq.version>3.15.1</jooq.version>
		<kotlinx.coroutines>1.5.1</kotlinx.coroutines>

		<!--Properties for JOOQ Codegen plugin-->
		<db.driver>org.postgresql.Driver</db.driver>
		<db.url>jdbc:postgresql://localhost:5432/afterlife_db?ssl=require</db.url>
		<db.username>afterlife_user</db.username>
		<db.password>afterlife_password</db.password>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.2</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-kotlin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-core</artifactId>
			<version>${kotlinx.coroutines}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-jdk8</artifactId>
			<version>${kotlinx.coroutines}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-reactor</artifactId>
			<version>${kotlinx.coroutines}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-test</artifactId>
			<version>${kotlin.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.23</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-meta</artifactId>
			<version>${jooq.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jooq-codegen</artifactId>
			<version>${jooq.version}</version>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<configuration>
					<args>
						<arg>-Xjsr305=strict</arg>
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>7.11.2</version>
			</plugin>
			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>
				<version>${jooq.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jdbc>  <!-- указываем настройки базы -->
						<driver>${db.driver}</driver>
						<url>${db.url}</url>
						<user>${db.username}</user>
						<password>${db.password}</password>
					</jdbc>
					<generator>
						<database>
							<includes>.*</includes>  <!-- включаемые подпакеты и файлы -->
							<excludes>  <!-- исключаемые подпакеты и файлы -->
								flyway_schema_history
							</excludes>
							<inputSchema>public</inputSchema>  <!-- схема -->
						</database>
						<generate>
							<records>true</records>
						</generate>
						<target>
							<!-- структура пакетов относительно основной директории -->
							<packageName>ru.ifmo.software_engineering.afterlife.database</packageName>
							<!-- основная директория. Лучше хранить в target. -->
							<directory>target/generated-sources/jooq</directory>
						</target>
					</generator>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.gantsign.maven</groupId>
				<artifactId>ktlint-maven-plugin</artifactId>
				<version>1.9.0</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<id>format-and-check</id>
						<goals>
							<goal>format</goal>
							<goal>ktlint</goal>
							<goal>check</goal>
						</goals>
					</execution>
					<execution>
						<id>check</id>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>io.github.phillipuniverse</groupId>
				<artifactId>githook-maven-plugin</artifactId>
				<version>1.0.5</version>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
						</goals>
						<configuration>
							<hooks>
								<pre-commit>
									echo running lint
									(cd Backend; mvn ktlint:ktlint)
								</pre-commit>
							</hooks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
